name: CI â€” docker-compose tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  docker-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.CI_PAT }}

      - name: Checkout user_service repo
        uses: actions/checkout@v4
        with:
          repository: Ingenieria-Web-2/user_service
          path: user_service
          token: ${{ secrets.CI_PAT }}

      - name: Checkout recipe_service repo
        uses: actions/checkout@v4
        with:
          repository: Ingenieria-Web-2/recipe_service
          path: recipe_service
          token: ${{ secrets.CI_PAT }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CI_PAT }}

      - name: Try to pull published images
        run: |
          docker pull ghcr.io/ingenieria-web-2/user_service:latest || true
          docker pull ghcr.io/ingenieria-web-2/recipe_service:latest || true

      - name: Build user_service images and push
        uses: docker/build-push-action@v5
        with:
          context: ./user_service
          file: ./user_service/Dockerfile
          push: true
          tags: ghcr.io/ingenieria-web-2/user_service:latest
          cache-from: type=registry,ref=ghcr.io/ingenieria-web-2/user_service:latest
          cache-to: type=registry,ref=ghcr.io/ingenieria-web-2/user_service:cache,mode=max

      - name: Build recipe_service image and push
        uses: docker/build-push-action@v5
        with:
          context: ./recipe_service
          file: ./recipe_service/Dockerfile
          push: true
          tags: ghcr.io/ingenieria-web-2/recipe_service:latest
          cache-from: type=registry,ref=ghcr.io/ingenieria-web-2/recipe_service:latest
          cache-to: type=registry,ref=ghcr.io/ingenieria-web-2/recipe_service:cache,mode=max

      - name: Start DB services
        run: docker compose -f "$GITHUB_WORKSPACE/docker-compose.yaml" up -d user_db recipe_db

      - name: Wait for user_db to be ready
        run: |
          echo "Waiting for Postgres (user_db)..."
          docker compose -f "$GITHUB_WORKSPACE/docker-compose.yaml" exec user_db bash -c 'until pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB"; do sleep 1; done'
        env:
          POSTGRES_USER: user
          POSTGRES_DB: user_db

      - name: Wait for recipe_db to be ready
        run: |
          echo "Waiting for Postgres (recipe_db)..."
          docker compose -f "$GITHUB_WORKSPACE/docker-compose.yaml" exec recipe_db bash -c 'until pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB"; do sleep 1; done'
        env:
          POSTGRES_USER: user
          POSTGRES_DB: recipe_db

      - name: Create test report directories
        run: |
          mkdir -p user_service/reports
          mkdir -p recipe_service/reports

      - name: Run user_service tests
        run: docker compose -f "$GITHUB_WORKSPACE/docker-compose.yaml" run --rm -v "$GITHUB_WORKSPACE/user_service/reports:/usr/src/user_service/reports" user_service python -m pytest --junitxml=reports/users-results.xml -v

      - name: Run recipe_service tests
        run: docker compose -f "$GITHUB_WORKSPACE/docker-compose.yaml" run --rm -v "$GITHUB_WORKSPACE/recipe_service/reports:/usr/src/recipe_service/reports" recipe_service python -m pytest --junitxml=reports/recipes-results.xml -v

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-reports
          path: |
            reports/user_service/*.xml
            reports/recipe_service/*.xml

      - name: Test Summary Report
        uses: test-summary/action@v2
        if: always()
        with:
          paths: |
            reports/user_service/*.xml
            reports/recipe_service/*.xml

      - name: Collect container logs
        if: always()
        run: |
          mkdir -p logs
          docker compose -f "$GITHUB_WORKSPACE/docker-compose.yaml" logs user_service > logs/user_service.log || true
          docker compose -f "$GITHUB_WORKSPACE/docker-compose.yaml" logs recipe_service > logs/recipe_service.log || true
        continue-on-error: true

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: service-logs
          path: logs/**

      - name: Tear down
        if: always()
        run: docker compose -f "$GITHUB_WORKSPACE/docker-compose.yaml" down -v

      - name: Debug workspace layout
        if: failure()
        run: |
          echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE"
          pwd
          ls -la "$GITHUB_WORKSPACE" || true
